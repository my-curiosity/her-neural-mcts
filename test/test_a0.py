import warnings
import sys
import unittest

from src.main import run

warnings.filterwarnings("ignore")


class TestA0(unittest.TestCase):

    def test_a0_bitflip(self):
        sys.argv += (
            " --experiment_name her8_b50"
            " --job_id 15559341"
            " --minutes_to_run 6800"
            " --max_iteration_to_run 50"
            " --sec_per_simulation -1"
            " --seed 1"
            " --logging_level 30"
            " --wandb online"
            " --gpu 0"
            " --data data_grammar_8/run_1"
            " --num_selfplay_iterations 50"
            " --num_selfplay_iterations_test 20"
            " --test_network False"
            " --test_every_n_steps 3"
            " --minimum_reward -1"
            " --maximum_reward 0"
            " --batch_size_training 256"
            " --num_gradient_steps 30"
            " --average_policy_if_wrong False"
            " --cold_start_iterations 1"
            " --MCTS_engine Normal"
            " --max_elements_in_best_list 10"
            " --temp_0 1"
            " --temperature_decay 0"
            " --num_MCTS_sims 50"
            " --c1 1"
            " --gamma 0.98"
            " --risk_seeking True"
            " --depth_first_search False"
            " --prioritize False"
            " --selfplay_buffer_window 10"
            " --balance_buffer False"
            " --use-puct True"
            " --training_mode mcts"
            " --hindsight_samples 8"
            " --hindsight_policy original"
            " --hindsight_goal_selection future"
            " --hindsight_trajectory_selection played"
            " --hindsight_num_trajectories 1"
            " --game bitflip"
            " --bitflip_num_bits 50"
            " --max_episode_steps 50"
            " --project_name her-neural-mcts-bitflip"
            " --lr 0.0005"
            " --load_pretrained False"
            " --test_generalization off"
        ).split()
        run()

    def test_a0_mmaze(self):
        sys.argv += (
            " --experiment_name her8_mmaze"
            " --job_id 15559341"
            " --minutes_to_run 6800"
            " --max_iteration_to_run 50"
            " --sec_per_simulation -1"
            " --seed 1"
            " --logging_level 30"
            " --wandb online"
            " --gpu 0"
            " --data data_grammar_8/run_1"
            " --num_selfplay_iterations 20"
            " --num_selfplay_iterations_test 10"
            " --test_network False"
            " --test_every_n_steps 3"
            " --minimum_reward -1"
            " --maximum_reward 0"
            " --batch_size_training 512"
            " --num_gradient_steps 30"
            " --average_policy_if_wrong False"
            " --cold_start_iterations 1"
            " --MCTS_engine Normal"
            " --max_elements_in_best_list 10"
            " --temp_0 1"
            " --temperature_decay 0"
            " --num_MCTS_sims 80"
            " --c1 1"
            " --gamma 0.999"
            " --risk_seeking True"
            " --depth_first_search False"
            " --prioritize False"
            " --selfplay_buffer_window 10"
            " --balance_buffer False"
            " --use-puct True"
            " --training_mode mcts"
            " --hindsight_samples 8"
            " --hindsight_policy original"
            " --hindsight_goal_selection future"
            " --hindsight_trajectory_selection played"
            " --hindsight_aggressive_returns_lambda 1"
            " --hindsight_experience_ranking False"
            " --hindsight_experience_ranking_threshold 0.5"
            " --hindsight_num_trajectories 1"
            " --hindsight_combined_experience_replay False"
            " --game maze"
            " --max_episode_steps 500"
            " --project_name her-neural-mcts-mmaze"
            " --lr 0.00025"
            " --load_pretrained False"
            " --test_generalization off"
        ).split()
        run()

    def test_a0_equation_discovery(self):
        sys.argv += (
            " --experiment_name her0_equation_mcts25"
            " --job_id 15559341"
            " --minutes_to_run 6800"
            " --max_iteration_to_run 300"
            " --max_num_nodes_in_syntax_tree 25"
            " --seed 1"
            " --logging_level 30"
            " --wandb online"
            " --gpu 0"
            " --data data_grammar_8/run_1"
            " --num_selfplay_iterations 50"
            " --num_selfplay_iterations_test 10"
            " --test_network False"
            " --test_every_n_steps 10"
            " --minimum_reward -1"
            " --maximum_reward 1"
            " --max_depth_of_tree 10"
            " --max_branching_factor 2"
            " --max_constants_in_tree 5"
            " --batch_size_training 64"
            " --num_gradient_steps 20"
            " --average_policy_if_wrong True"
            " --cold_start_iterations 1"
            " --equation_preprocess_class GenPandasPreprocess"
            " --max_len_datasets 100"
            " --class_equation_encoder Transformer_Encoder_String"
            " --embedding_dim_encoder_equation 8"
            " --max_tokens_equation 64"
            " --use_position_encoding False"
            " --num_layer_encoder_equation_transformer 2"
            " --num_heads_encoder_equation_transformer 4"
            " --dim_feed_forward_equation_encoder_transformer 32"
            " --dropout_rate 0.1"
            " --class_measurement_encoder LSTM_Measurement_Encoder"
            " --normalize_approach abs_max_y"
            " --contrastive_loss False"
            " --encoder_measurements_LSTM_units 64"
            " --encoder_measurements_LSTM_return_sequence True"
            " --encoder_measurement_num_layer 3"
            " --encoder_measurement_num_neurons 128"
            " --model_dim_hidden_dataset_transformer 128"
            " --model_num_heads_dataset_transformer 8"
            " --model_stacking_depth_dataset_transformer 4"
            " --model_sep_res_embed_dataset_transformer True"
            " --model_att_block_layer_norm_dataset_transformer True"
            " --model_layer_norm_eps_dataset_transformer 1e-12"
            " --model_att_score_norm_dataset_transformer softmax"
            " --model_pre_layer_norm_dataset_transformer False"
            " --model_rff_depth_dataset_transformer 2"
            " --model_hidden_dropout_prob_dataset_transformer 1e-06"
            " --model_att_score_dropout_prob_dataset_transformer 1e-06"
            " --model_mix_heads_dataset_transformer True"
            " --model_embedding_layer_norm_dataset_transformer False"
            " --bit_embedding_dataset_transformer False"
            " --dataset_transformer_use_latent_vector True"
            " --use_feature_index_embedding_dataset_transformer False"
            " --float_precision_text_transformer 3"
            " --mantissa_len_text_transformer 1"
            " --max_exponent_text_transformer 100"
            " --num_dimensions_text_transformer 3"
            " --embedding_dim_text_transformer 512"
            " --embedder_intermediate_expansion_factor_text_transformer 1.0"
            " --num_encoder_layers_text_transformer 4"
            " --num_attention_heads_text_transformer 8"
            " --encoder_intermediate_expansion_factor_text_transformer 4.0"
            " --intermediate_dropout_rate_text_transformer 0.2"
            " --attention_dropout_rate_text_transformer 0.1"
            " --actor_decoder_class mlp_decoder"
            " --actor_decoder_normalize_way soft_max"
            " --critic_decoder_class mlp_decoder"
            " --critic_decoder_normalize_way tanh"
            " --MCTS_engine Normal"
            " --max_elements_in_best_list 10"
            " --temp_0 0.5"
            " --temperature_decay 0"
            " --num_MCTS_sims 25"
            " --c1 10"
            " --gamma 1"
            " --n_steps 100"
            " --risk_seeking True"
            " --depth_first_search True"
            " --prioritize False"
            " --prioritize_alpha 0.5"
            " --prioritize_beta 1"
            " --selfplay_buffer_window 50"
            " --balance_buffer False"
            " --use-puct True"
            " --training_mode mcts"
            " --hindsight_samples 0"
            " --hindsight_policy original"
            " --hindsight_goal_selection final"
            " --hindsight_trajectory_selection played"
            " --hindsight_aggressive_returns_lambda 1"
            " --hindsight_experience_ranking False"
            " --hindsight_experience_ranking_threshold 0.5"
            " --hindsight_num_trajectories 10"
            " --game equation_discovery"
            " --project_name her-neural-mcts-equation"
            " --load_pretrained False"
        ).split()
        run()
